// Code generated by MockGen. DO NOT EDIT.
// Source: i_main_factory.go

// Package factory_mock is a generated GoMock package.
package factory_mock

import (
	utils "bitbucket.org/albert_andrejev/free_info/utils"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIMainFactory is a mock of IMainFactory interface
type MockIMainFactory struct {
	ctrl     *gomock.Controller
	recorder *MockIMainFactoryMockRecorder
}

// MockIMainFactoryMockRecorder is the mock recorder for MockIMainFactory
type MockIMainFactoryMockRecorder struct {
	mock *MockIMainFactory
}

// NewMockIMainFactory creates a new mock instance
func NewMockIMainFactory(ctrl *gomock.Controller) *MockIMainFactory {
	mock := &MockIMainFactory{ctrl: ctrl}
	mock.recorder = &MockIMainFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIMainFactory) EXPECT() *MockIMainFactoryMockRecorder {
	return m.recorder
}

// GetSimpleHash mocks base method
func (m *MockIMainFactory) GetSimpleHash() utils.ISimpleHash {
	ret := m.ctrl.Call(m, "GetSimpleHash")
	ret0, _ := ret[0].(utils.ISimpleHash)
	return ret0
}

// GetSimpleHash indicates an expected call of GetSimpleHash
func (mr *MockIMainFactoryMockRecorder) GetSimpleHash() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSimpleHash", reflect.TypeOf((*MockIMainFactory)(nil).GetSimpleHash))
}

// GetX11Hash mocks base method
func (m *MockIMainFactory) GetX11Hash() utils.IX12Hash {
	ret := m.ctrl.Call(m, "GetX11Hash")
	ret0, _ := ret[0].(utils.IX12Hash)
	return ret0
}

// GetX11Hash indicates an expected call of GetX11Hash
func (mr *MockIMainFactoryMockRecorder) GetX11Hash() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetX11Hash", reflect.TypeOf((*MockIMainFactory)(nil).GetX11Hash))
}
