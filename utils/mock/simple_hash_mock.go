// Code generated by MockGen. DO NOT EDIT.
// Source: simple_hash.go

// Package utils_mock is a generated GoMock package.
package utils_mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockISimpleHash is a mock of ISimpleHash interface
type MockISimpleHash struct {
	ctrl     *gomock.Controller
	recorder *MockISimpleHashMockRecorder
}

// MockISimpleHashMockRecorder is the mock recorder for MockISimpleHash
type MockISimpleHashMockRecorder struct {
	mock *MockISimpleHash
}

// NewMockISimpleHash creates a new mock instance
func NewMockISimpleHash(ctrl *gomock.Controller) *MockISimpleHash {
	mock := &MockISimpleHash{ctrl: ctrl}
	mock.recorder = &MockISimpleHashMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockISimpleHash) EXPECT() *MockISimpleHashMockRecorder {
	return m.recorder
}

// Sum256 mocks base method
func (m *MockISimpleHash) Sum256(data []byte) []byte {
	ret := m.ctrl.Call(m, "Sum256", data)
	ret0, _ := ret[0].([]byte)
	return ret0
}

// Sum256 indicates an expected call of Sum256
func (mr *MockISimpleHashMockRecorder) Sum256(data interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sum256", reflect.TypeOf((*MockISimpleHash)(nil).Sum256), data)
}
