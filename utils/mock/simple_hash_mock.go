// Code generated by MockGen. DO NOT EDIT.
// Source: i_simple_hash.go

// Package utils_mock is a generated GoMock package.
package utils_mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockiSimpleHash is a mock of iSimpleHash interface
type MockiSimpleHash struct {
	ctrl     *gomock.Controller
	recorder *MockiSimpleHashMockRecorder
}

// MockiSimpleHashMockRecorder is the mock recorder for MockiSimpleHash
type MockiSimpleHashMockRecorder struct {
	mock *MockiSimpleHash
}

// NewMockiSimpleHash creates a new mock instance
func NewMockiSimpleHash(ctrl *gomock.Controller) *MockiSimpleHash {
	mock := &MockiSimpleHash{ctrl: ctrl}
	mock.recorder = &MockiSimpleHashMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockiSimpleHash) EXPECT() *MockiSimpleHashMockRecorder {
	return m.recorder
}

// Blake2s mocks base method
func (m *MockiSimpleHash) Blake2s(data []byte) [32]byte {
	ret := m.ctrl.Call(m, "Blake2s", data)
	ret0, _ := ret[0].([32]byte)
	return ret0
}

// Blake2s indicates an expected call of Blake2s
func (mr *MockiSimpleHashMockRecorder) Blake2s(data interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Blake2s", reflect.TypeOf((*MockiSimpleHash)(nil).Blake2s), data)
}
