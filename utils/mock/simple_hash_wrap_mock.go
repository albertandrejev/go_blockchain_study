// Code generated by MockGen. DO NOT EDIT.
// Source: i_simple_hash_wrap.go

// Package utils_mock is a generated GoMock package.
package utils_mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockiSimpleHashWrap is a mock of iSimpleHashWrap interface
type MockiSimpleHashWrap struct {
	ctrl     *gomock.Controller
	recorder *MockiSimpleHashWrapMockRecorder
}

// MockiSimpleHashWrapMockRecorder is the mock recorder for MockiSimpleHashWrap
type MockiSimpleHashWrapMockRecorder struct {
	mock *MockiSimpleHashWrap
}

// NewMockiSimpleHashWrap creates a new mock instance
func NewMockiSimpleHashWrap(ctrl *gomock.Controller) *MockiSimpleHashWrap {
	mock := &MockiSimpleHashWrap{ctrl: ctrl}
	mock.recorder = &MockiSimpleHashWrapMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockiSimpleHashWrap) EXPECT() *MockiSimpleHashWrapMockRecorder {
	return m.recorder
}

// Blake2s mocks base method
func (m *MockiSimpleHashWrap) Blake2s(data []byte) [32]byte {
	ret := m.ctrl.Call(m, "Blake2s", data)
	ret0, _ := ret[0].([32]byte)
	return ret0
}

// Blake2s indicates an expected call of Blake2s
func (mr *MockiSimpleHashWrapMockRecorder) Blake2s(data interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Blake2s", reflect.TypeOf((*MockiSimpleHashWrap)(nil).Blake2s), data)
}

// Sha256 mocks base method
func (m *MockiSimpleHashWrap) Sha256(data []byte) [32]byte {
	ret := m.ctrl.Call(m, "Sha256", data)
	ret0, _ := ret[0].([32]byte)
	return ret0
}

// Sha256 indicates an expected call of Sha256
func (mr *MockiSimpleHashWrapMockRecorder) Sha256(data interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sha256", reflect.TypeOf((*MockiSimpleHashWrap)(nil).Sha256), data)
}
